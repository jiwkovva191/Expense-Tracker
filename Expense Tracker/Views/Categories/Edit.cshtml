
@model Expense_Tracker.Models.Category
@{
	ViewData["Title"] = "Edit Category";
}

<h3>Edit Category</h3>
<form asp-action="Edit" method="post">
	@*we should add a hidden input for the id, so it will be passed back to the controller
		without it the controller won't know which category to update
	*@
	<input type="hidden" asp-for="CategoryId" />
	<div class="form-group">
		<label for="Title">Title</label>
		<input type="text" class="form-control" asp-for="Title" />
	</div>
	<div class="form-group">
		<label for="Icon">Icon:</label>
		<div id="icon-picker" class="d-flex flex-wrap">
			@{
				var icons = new List<string>
			{
			"fa-solid fa-car",
			"fa-solid fa-utensils",
			"fa-solid fa-shopping-cart",
			"fa-solid fa-plane",
			"fa-solid fa-home",
			"fa-solid fa-heart",
			"fa-solid fa-bicycle",
			"fa-solid fa-bell"
			};
			}
			@foreach (var icon in icons)
			{
				var isSelected = Model.Icon == icon ? "color:blue;" : "";
				<div>
					<i class="@icon icon-option" data-icon="@icon" style="font-size:24px; cursor:pointer; @isSelected"></i>
				</div>
			}
		</div>
		<input type="hidden" id="Icon" name="Icon" value="@Model?.Icon" />
	</div>
	<div class="form-group">
		<label asp-for="Type" class="control-label"></label>
		<select asp-for ="Type" class="form-control">
			<option>Expense</option>
			<option>Income</option>
		</select>
	</div>
	<button type="submit" class="btn btn-primary">Update</button>
</form>
<script>
	//selects all the icon-option elements and attaches an event handler to the element
	document.querySelectorAll('.icon-option').forEach(icon =>{
		icon.addEventListener('click', function(){
			//remove highlight color from all icons
			document.querySelectorAll('.icon-option').forEach(i=>i.style.color='');
			//highlight the selected icon
			this.style.color='blue';
			//set the value of the hidden input to the selected icon
			//the data-icon attribute stores the icon name
			document.getElementById('Icon').value = this.getAttribute('data-icon');
		});
	});
</script>
